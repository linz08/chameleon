<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.javaguitar.mapper.QuizMapper">
    <select id="selectQuiz_Default" resultType="QuizModel">
 <![CDATA[
        SELECT A.*, /* QuizMapper.selectQuiz  퀴즈 기본 */
               FNC_COMMON_CODE(A.QUIZ_SOURCE) AS QUIZ_SOURCE_NAME,
               (
                   SELECT CATEGORY_NAME
                   FROM DOCUMENT_CATEGORY
                   WHERE DOC_CODE = A.DOC_CODE
               )                              AS CATEGORY_NAME
        FROM QUIZ A
        WHERE PATTERN_CODE <> 112
        ORDER BY RAND()
        LIMIT 1
        ]]>
    </select>
    <select id="selectQuiz" resultType="QuizModel">
     <![CDATA[
        SELECT A.*, /* QuizMapper.selectQuiz  한번도 안 푼 퀴즈 */
               FNC_COMMON_CODE(A.QUIZ_SOURCE) AS QUIZ_SOURCE_NAME,
               (
                   SELECT CATEGORY_NAME
                   FROM DOCUMENT_CATEGORY
                   WHERE DOC_CODE = A.DOC_CODE
               )                              AS CATEGORY_NAME
        FROM QUIZ A
        WHERE A.PATTERN_CODE <> 112
          AND NOT EXISTS(SELECT *
                         FROM QUIZ_STAT B
                         WHERE B.DOC_CODE = A.DOC_CODE
                           AND B.QUIZ_NUMBER = A.QUIZ_NUMBER)
        ORDER BY RAND()
        LIMIT 1
        ]]>
    </select>
    <select id="selectQuizFail" resultType="QuizModel">
     <![CDATA[
        SELECT A.*, /* QuizMapper.selectQuizFail  틀린 문제 */
               FNC_COMMON_CODE(A.QUIZ_SOURCE) AS QUIZ_SOURCE_NAME,
               (
                   SELECT CATEGORY_NAME
                   FROM DOCUMENT_CATEGORY
                   WHERE DOC_CODE = A.DOC_CODE
               )                              AS CATEGORY_NAME
        FROM QUIZ A,
             (
                 SELECT B.DOC_CODE, B.QUIZ_NUMBER
                 FROM (SELECT DOC_CODE, QUIZ_NUMBER, COUNT(*) AS SUCCESS_CNT
                       FROM QUIZ_STAT
                       WHERE SUCCESS_YN = 'Y'
                       GROUP BY DOC_CODE, QUIZ_NUMBER) A,
                      (
                          SELECT DOC_CODE, QUIZ_NUMBER, COUNT(*) AS FAIL_CNT
                          FROM QUIZ_STAT
                          WHERE SUCCESS_YN <> 'Y'
                          GROUP BY DOC_CODE, QUIZ_NUMBER) B
                 WHERE A.DOC_CODE = B.DOC_CODE
                   AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
                   AND ((B.FAIL_CNT >= A.SUCCESS_CNT) OR (A.SUCCESS_CNT = 1))
             ) B
        WHERE A.PATTERN_CODE <> 112
          and A.DOC_CODE = B.DOC_CODE
          AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
        ORDER BY RAND()
        LIMIT 1
        ]]>
    </select>
    <select id="selectQuiz_NoDoc" resultType="QuizModel">
    <![CDATA[
        SELECT A.*, /* QuizMapper.selectQuiz_NoDoc  문서 없는 것 */
               fnc_common_code(A.QUIZ_SOURCE)                                            AS QUIZ_SOURCE_NAME,
               (SELECT CATEGORY_NAME FROM DOCUMENT_CATEGORY WHERE DOC_CODE = A.DOC_CODE) AS CATEGORY_NAME
        FROM QUIZ A
                 LEFT OUTER JOIN QUIZ_ANSWER B
                                 ON A.DOC_CODE = B.DOC_CODE
                                     AND
                                    A.QUIZ_NUMBER = B.QUIZ_NUMBER
        WHERE A.PATTERN_CODE <> 112
          AND NOT EXISTS(SELECT * FROM QUIZ_DOCUMENT C WHERE C.DOC_CODE = A.DOC_CODE AND C.QUIZ_NUMBER = A.QUIZ_NUMBER)
        ORDER BY RAND()
        LIMIT 1
        ]]>
    </select>

    <select id="selectQuizEdit" parameterType="QuizModel"
            resultType="QuizModel">
        SELECT fnc_common_code(A.QUIZ_SOURCE)                                            AS QUIZ_SOURCE_NAME,
               (SELECT CATEGORY_NAME FROM DOCUMENT_CATEGORY WHERE DOC_CODE = A.DOC_CODE) AS CATEGORY_NAME,
               A.*
        FROM QUIZ A
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER =
              #{quiz_number}
    </select>

    <select id="selectQuizList" parameterType="int" resultType="QuizModel">
        <![CDATA[
        SELECT /* QuizMapper.selectQuizList */
            fnc_common_code(A.QUIZ_LEVEL)         AS               QUIZ_LEVEL,
            IF(A.PATTERN_CODE = '112', CONCAT('<strike>', COALESCE(B.DOC_NAME, 'N/A'), '</strike>'),
               COALESCE(B.DOC_NAME, 'N/A'))       AS               CATEGORY_NAME
                ,
            A.DOC_CODE,
            A.QUIZ_NUMBER,
            A.QUIZ_ORG_NUMBER,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN = 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_Y,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN <> 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_N,
            (SELECT COUNT(*) AS CNT
             FROM QUIZ_STAT C
             WHERE DOC_CODE = A.DOC_CODE
               AND QUIZ_NUMBER = A.QUIZ_NUMBER
               AND quiz_date = date_format(curdate(), '%Y-%m-%d')) TODAY_YN
        FROM QUIZ A
                 LEFT OUTER JOIN (SELECT MAX(DOC_NAME) AS DOC_NAME, DOC_CODE, QUIZ_NUMBER
                                  FROM (
                                           SELECT X.DOC_NAME, X.DOC_CODE, X.QUIZ_NUMBER
                                           FROM QUIZ_DOCUMENT X
                                       ) Y
                                  GROUP BY Y.DOC_CODE, Y.QUIZ_NUMBER) B
                                 ON A.DOC_CODE = B.DOC_CODE
                                     AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
        WHERE A.QUIZ_SOURCE = #{quiz_source}
        ORDER BY CAST(A.DOC_CODE AS INTEGER), CAST(QUIZ_ORG_NUMBER AS INTEGER)
        ]]>
    </select>
    <select id="selectChkQuizList" resultType="QuizModel">
        <![CDATA[
        SELECT /* QuizMapper.selectChkQuizList */
            fnc_common_code(A.QUIZ_LEVEL)         AS               QUIZ_LEVEL,
            IF(A.PATTERN_CODE = '112', CONCAT('<strike>', COALESCE(B.DOC_NAME, 'N/A'), '</strike>'),
               COALESCE(B.DOC_NAME, 'N/A'))       AS               CATEGORY_NAME
                ,
            A.DOC_CODE,
            A.QUIZ_NUMBER,
            A.QUIZ_ORG_NUMBER,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN = 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_Y,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN <> 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_N,
            (SELECT COUNT(*) AS CNT
             FROM QUIZ_STAT C
             WHERE DOC_CODE = A.DOC_CODE
               AND QUIZ_NUMBER = A.QUIZ_NUMBER
               AND quiz_date = date_format(curdate(), '%Y-%m-%d')) TODAY_YN
        FROM QUIZ A
                 LEFT OUTER JOIN (SELECT MAX(DOC_NAME) AS DOC_NAME, DOC_CODE, QUIZ_NUMBER
                                  FROM (
                                           SELECT X.DOC_NAME, X.DOC_CODE, X.QUIZ_NUMBER
                                           FROM QUIZ_DOCUMENT X
                                       ) Y
                                  GROUP BY Y.DOC_CODE, Y.QUIZ_NUMBER) B
                                 ON A.DOC_CODE = B.DOC_CODE
                                     AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
        WHERE A.CHK_QUIZ = 'Y'
        ORDER BY CAST(A.DOC_CODE AS INTEGER), CAST(QUIZ_ORG_NUMBER AS INTEGER)
        ]]>
    </select>
    <select id="selectZzzQuizList" resultType="QuizModel">
        <![CDATA[
        SELECT /* QuizMapper.selectChkQuizList */
            fnc_common_code(A.QUIZ_LEVEL)         AS               QUIZ_LEVEL,
            IF(A.PATTERN_CODE = '112', CONCAT('<strike>', COALESCE(B.DOC_NAME, 'N/A'), '</strike>'),
               COALESCE(B.DOC_NAME, 'N/A'))       AS               CATEGORY_NAME
                ,
            A.DOC_CODE,
            A.QUIZ_NUMBER,
            A.QUIZ_ORG_NUMBER,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN = 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_Y,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN <> 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_N,
            (SELECT COUNT(*) AS CNT
             FROM QUIZ_STAT C
             WHERE DOC_CODE = A.DOC_CODE
               AND QUIZ_NUMBER = A.QUIZ_NUMBER
               AND quiz_date = date_format(curdate(), '%Y-%m-%d')) TODAY_YN
        FROM QUIZ A
                 LEFT OUTER JOIN (SELECT MAX(DOC_NAME) AS DOC_NAME, DOC_CODE, QUIZ_NUMBER
                                  FROM (
                                           SELECT X.DOC_NAME, X.DOC_CODE, X.QUIZ_NUMBER
                                           FROM QUIZ_DOCUMENT X
                                       ) Y
                                  GROUP BY Y.DOC_CODE, Y.QUIZ_NUMBER) B
                                 ON A.DOC_CODE = B.DOC_CODE
                                     AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
        WHERE A.CHK_QUIZ = 'Z'
        ORDER BY CAST(A.DOC_CODE AS INTEGER), CAST(QUIZ_ORG_NUMBER AS INTEGER)
        ]]>
    </select>
    <select id="selectQuizDayList" parameterType="String"
            resultType="QuizModel">
       <![CDATA[
        SELECT /* QuizMapper.selectQuizDayList */
            IF(B.PATTERN_CODE = '112', CONCAT('<strike>', SUBSTR(C.DOC_NAME, 1, 16), '</strike>'),
               SUBSTR(C.DOC_NAME, 1, 16))         AS               CATEGORY_NAME,
            FNC_COMMON_CODE(B.QUIZ_SOURCE)        AS               QUIZ_SOURCE_NAME,
            A.SUCCESS_YN,
            B.DOC_CODE,
            B.QUIZ_NUMBER,
            B.QUIZ_ORG_NUMBER,
            B.PATTERN_CODE,
            fnc_common_code(B.QUIZ_LEVEL)         AS               QUIZ_LEVEL,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN = 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_Y,
            (SELECT COUNT(*)
             FROM QUIZ_STAT C
             WHERE C.SUCCESS_YN <> 'Y'
               AND C.DOC_CODE = A.DOC_CODE
               AND C.QUIZ_NUMBER = A.QUIZ_NUMBER) AS               SUCCESS_N,
            (SELECT COUNT(*) AS CNT
             FROM QUIZ_STAT C
             WHERE DOC_CODE = A.DOC_CODE
               AND QUIZ_NUMBER = A.QUIZ_NUMBER
               AND quiz_date = date_format(curdate(), '%Y-%m-%d')) TODAY_YN
        FROM QUIZ_STAT A,
             QUIZ B,
             (SELECT MAX(DOC_NAME) AS DOC_NAME, DOC_CODE, QUIZ_NUMBER
              FROM (
                       SELECT X.DOC_NAME, X.DOC_CODE, X.QUIZ_NUMBER
                       FROM QUIZ_DOCUMENT X
                   ) Y
              GROUP BY Y.DOC_CODE, Y.QUIZ_NUMBER) C
        WHERE A.DOC_CODE = B.DOC_CODE
          AND A.QUIZ_NUMBER = B.QUIZ_NUMBER
          AND A.DOC_CODE = C.DOC_CODE
          AND A.QUIZ_NUMBER = C.QUIZ_NUMBER
          AND A.QUIZ_DATE = #{quiz_date}
        ORDER BY A.CREATE_DATE DESC
        ]]>
    </select>
    <select id="selectQuizSearch" parameterType="String" resultType="QuizModel">
        SELECT DISTINCT A.QUIZ_TITLE, A.DOC_CODE, A.QUIZ_NUMBER
        FROM QUIZ A,
             QUIZ_OBJECTIVE B
        WHERE A.QUIZ_TITLE LIKE CONCAT('%', #{quiz_title}, '%')
           OR (A.DOC_CODE = B.DOC_CODE AND
               A.QUIZ_NUMBER = B.QUIZ_NUMBER AND B.QUIZ_OBJECT_NAME LIKE CONCAT('%', #{quiz_title}, '%'))
    </select>
    <select id="selectQuizMemo" parameterType="QuizModel" resultType="QuizModel">
     <![CDATA[
        SELECT A.QUIZ_MEMO, A.DOC_CODE, A.QUIZ_NUMBER /* QuizMapper.selectQuizMemo */
        FROM QUIZ A
        WHERE A.DOC_CODE = #{doc_code}
          AND A.QUIZ_NUMBER = #{quiz_number}
        ]]>
    </select>
    <update id="updateQuizMemo" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ A
        SET QUIZ_MEMO = #{quiz_memo}
        WHERE A.DOC_CODE = #{doc_code}
          AND A.QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <insert id="insertQuiz" parameterType="QuizModel">
		<![CDATA[
        INSERT INTO QUIZ( DOC_CODE
                        , QUIZ_NUMBER
                        , QUIZ_CODE
                        , QUIZ_TITLE
                        , QUIZ_SUBTITLE
                        , PATTERN_CODE
                        , QUIZ_LEVEL
                        , QUIZ_SOURCE
                        , CREATE_DATE
                        , MODIFY_DATE
                        , QUIZ_MEMO
                        , QUIZ_ORG_NUMBER
                        , QUIZ_ANSWER
                        , QUIZ_DESC)
        VALUES ( #{doc_code}
               , #{quiz_number}
               , #{quiz_code}
               , REPLACE(REPLACE(#{quiz_title}, '<p>', ''), '</p>', '')
               , #{quiz_subtitle}
               , #{pattern_code}
               , #{quiz_level}
               , #{quiz_source}
               , now()
               , now()
               , #{quiz_memo}
               , #{quiz_org_number}
               , #{quiz_answer}
               , #{quiz_desc})
        ]]>
	</insert>
    <update id="updateQuiz" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET DOC_CODE= #{doc_code},
            QUIZ_CODE = #{quiz_code},
            QUIZ_TITLE = REPLACE(REPLACE(#{quiz_title}, '<p>', ''), '</p>', ''),
            QUIZ_SUBTITLE = #{quiz_subtitle},
            PATTERN_CODE = #{pattern_code},
            QUIZ_LEVEL = #{quiz_level},
            QUIZ_SOURCE = #{quiz_source},
            MODIFY_DATE = now(),
            QUIZ_MEMO = #{quiz_memo},
            QUIZ_ORG_NUMBER =#{quiz_org_number},
            QUIZ_ANSWER = #{quiz_answer},
            QUIZ_DESC = #{quiz_desc}
        WHERE QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizEtc" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET PATTERN_CODE = #{pattern_code},
            QUIZ_LEVEL   = #{quiz_level}
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizChkQuiz" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET CHK_QUIZ = #{chk_quiz}
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizChkQuizDel" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET CHK_QUIZ = NULL
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizTitle" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET QUIZ_TITLE = REPLACE(REPLACE(#{quiz_title}, '<p>', ''), '</p>', '')
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizSubTitle" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET QUIZ_SUBTITLE = #{quiz_subtitle}
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <update id="updateQuizDesc" parameterType="QuizModel">
	<![CDATA[
        UPDATE
            QUIZ
        SET QUIZ_DESC = #{quiz_desc}
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_NUMBER = #{quiz_number}
        ]]>
	</update>
    <select id="selectMaxQuizNumber" resultType="java.lang.Integer">
        SELECT /*
		QuizMapper.selectMaxQuizNumber */
            IFNULL(MAX(QUIZ_NUMBER) + 1, 1)
        FROM QUIZ
    </select>
    <select id="selectPreAnswer" resultType="java.lang.String">
        SELECT /*
		QuizMapper.selectPreAnswer */
            QUIZ_ANSWER
        FROM QUIZ_PRE_ANSWER
        WHERE DOC_CODE = #{doc_code}
          AND QUIZ_SOURCE = #{quiz_source}
          AND QUIZ_ORG_NUMBER = #{quiz_org_number}
    </select>
</mapper>
